Send the script file and the link to your git hub to the mentors for verification.

4. Create a “JSON” folder on GitHub
	✓
5. Clone repo on local
	git clone link
6. Create a “new.json” file
touch new.json
7. Add a file under git.
	git add .
8. Commit the file.
	git commit -m "HW23"
9. Send the file to an external GitHub repository.
	git push
10. Edit the contents of the file "new.json" - write information about yourself (full name, age, number of pets, future desired salary). Write everything in JSON format.
	vim new.json
	i
	{
	"FIO": ".... Alex ....",
	"age": "32",
	"pets": 1,
	"salary": "125000 dollars"
	}
	esc
	:wq
11. Add and commit “new.json ”one line.
	git add new.json && git commit -m "new.json "
12. Send changes to an external repository.
	git push
13. Create a preferences.json
	vim preferences.json
	i
	{
	favorites: [
		"movie": "The Hateful Eight",
		"show": "Breaking Bad",
		"food": "sushi",
		"season": "spring",
		"country": "Italy" 
	]
	}
	esc
	:wq
14. Create skills.json
	vim skills.json
	i
	{
	"git": "GitHub",
	"Shell": "GitBush",
	"API": "Postman",
	"Code": "Python"
	}
	esc
	:wq	
15. Send two files to an external repository
	git add .
	git commit -m "git add two files"
	git push 
16. Create a bug_report.json file on the web interface.
	✓
17. Make Commit changes (save) changes on the web interface
	✓
18. Modify the bug_report file on the web interface, add a bug report in JSON.
	✓
19  Make Commit changes (save) changes on the web interface.
	✓
20. Synchronize external and local JSON repository
   git pull	

21. Create a “XML” folder on GitHub
	✓
20. Edit the contents of the file “new2.xml " - write information about yourself (full name, age, number of pets, future desired salary). Write everything in XML format.
vim new2.xml
i
<field name="FIO">.... Alex ....</field>
<field name="age">32</field>
<field name="pets">0</field>
<field name="salary">125000</field>
esc
:wq
21. Add and commit “new2.xml ”one line.
git add new2.xml && git commit -m "new2.xml "
22. Send changes to an external repository.
git push
23. Send the previous GitBush Terminal homework to an external repository.
	✓
24. In the GitHub web interface, create a file new3.txt .
Good)
25. Edit the contents of the file in the web interface “new3.txt " - write information about your preferences (Favorite movie, favorite TV series, favorite food, favorite time of year, the party you would like to visit).
Well)
26. Make Commit changes (save) changes on the web interface.
Well)
27. Synchronize the external and local repositories (merge changes from the external repository)
git pull

